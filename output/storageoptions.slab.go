// Code generated by github.com/visvasity/slabgen. DO NOT EDIT.

package output

import (
	"fmt"
	"strings"

	input "github.com/visvasity/slabgen/input"
	"github.com/visvasity/slabgen/slabs"
	"github.com/visvasity/slabgen/slabutil"
)

// Reader type defines accessor methods for read-only access.
type StorageOptionsReader []byte

// Writer type extends the reader with mutable methods.
type StorageOptionsWriter struct{ StorageOptionsReader }

var structSizeOfStorageOptions = slabutil.SizeFor[input.StorageOptions]()
var fieldOffsetsOfStorageOptions = slabutil.OffsetsFor[input.StorageOptions](nil)

// SlabBytes returns access to the underlying byte slice.
func (v StorageOptionsReader) SlabBytes() slabs.Bytes {
	return []byte(v)
}

// Writer returns the StorageOptions writer for read-write access to it's fields.
func (v StorageOptionsReader) Writer() StorageOptionsWriter {
	return StorageOptionsWriter{v}
}

// Reader returns the StorageOptions reader with read-only access to it's fields.
func (v StorageOptionsWriter) Reader() StorageOptionsReader {
	return v.StorageOptionsReader
}

// IsZero returns true if all underlying bytes are zero.
func (v StorageOptionsReader) IsZero() bool {
	return slabutil.IsZero(v[:structSizeOfStorageOptions])
}

// SetZero sets all underlying bytes to zero.
func (v StorageOptionsWriter) SetZero() {
	slabutil.SetZero(v.SlabBytes()[:structSizeOfStorageOptions])
}

func (v StorageOptionsReader) String() string {
	var sb strings.Builder
	fmt.Fprintf(&sb, "BlockSize=%d", v.BlockSize())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxLBAMetadataBlockItems=%d", v.MaxLBAMetadataBlockItems())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxObjectListBlockItems=%d", v.MaxObjectListBlockItems())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxFreeDBAListBlockItems=%d", v.MaxFreeDBAListBlockItems())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxFreePBAListBlockItems=%d", v.MaxFreePBAListBlockItems())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxFreeLBAListBlockItems=%d", v.MaxFreeLBAListBlockItems())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxNonDataLBAListBlockItems=%d", v.MaxNonDataLBAListBlockItems())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxDBARegionListBlockItems=%d", v.MaxDBARegionListBlockItems())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxFreeDataRegionListBlockItems=%d", v.MaxFreeDataRegionListBlockItems())
	fmt.Fprintf(&sb, " ")
	fmt.Fprintf(&sb, "MaxDeferredPBAListBlockItems=%d", v.MaxDeferredPBAListBlockItems())
	return sb.String()
}

func (v StorageOptionsReader) CopyTo(x *input.StorageOptions) {
	x.BlockSize = v.BlockSize()
	x.MaxLBAMetadataBlockItems = v.MaxLBAMetadataBlockItems()
	x.MaxObjectListBlockItems = v.MaxObjectListBlockItems()
	x.MaxFreeDBAListBlockItems = v.MaxFreeDBAListBlockItems()
	x.MaxFreePBAListBlockItems = v.MaxFreePBAListBlockItems()
	x.MaxFreeLBAListBlockItems = v.MaxFreeLBAListBlockItems()
	x.MaxNonDataLBAListBlockItems = v.MaxNonDataLBAListBlockItems()
	x.MaxDBARegionListBlockItems = v.MaxDBARegionListBlockItems()
	x.MaxFreeDataRegionListBlockItems = v.MaxFreeDataRegionListBlockItems()
	x.MaxDeferredPBAListBlockItems = v.MaxDeferredPBAListBlockItems()
}

func (v StorageOptionsWriter) CopyFrom(x *input.StorageOptions) {
	v.SetBlockSize(x.BlockSize)
	v.SetMaxLBAMetadataBlockItems(x.MaxLBAMetadataBlockItems)
	v.SetMaxObjectListBlockItems(x.MaxObjectListBlockItems)
	v.SetMaxFreeDBAListBlockItems(x.MaxFreeDBAListBlockItems)
	v.SetMaxFreePBAListBlockItems(x.MaxFreePBAListBlockItems)
	v.SetMaxFreeLBAListBlockItems(x.MaxFreeLBAListBlockItems)
	v.SetMaxNonDataLBAListBlockItems(x.MaxNonDataLBAListBlockItems)
	v.SetMaxDBARegionListBlockItems(x.MaxDBARegionListBlockItems)
	v.SetMaxFreeDataRegionListBlockItems(x.MaxFreeDataRegionListBlockItems)
	v.SetMaxDeferredPBAListBlockItems(x.MaxDeferredPBAListBlockItems)
}

func (v StorageOptionsReader) BlockSize() uint32 {
	var offset = fieldOffsetsOfStorageOptions[0]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetBlockSize(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[0]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxLBAMetadataBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[1]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxLBAMetadataBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[1]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxObjectListBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[2]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxObjectListBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[2]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxFreeDBAListBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[3]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxFreeDBAListBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[3]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxFreePBAListBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[4]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxFreePBAListBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[4]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxFreeLBAListBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[5]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxFreeLBAListBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[5]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxNonDataLBAListBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[6]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxNonDataLBAListBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[6]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxDBARegionListBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[7]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxDBARegionListBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[7]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxFreeDataRegionListBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[8]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxFreeDataRegionListBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[8]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}

func (v StorageOptionsReader) MaxDeferredPBAListBlockItems() uint32 {
	var offset = fieldOffsetsOfStorageOptions[9]
	return uint32(v.SlabBytes().Uint32At(offset))
}

func (v StorageOptionsWriter) SetMaxDeferredPBAListBlockItems(x uint32) {
	var offset = fieldOffsetsOfStorageOptions[9]
	v.SlabBytes().SetUint32At(offset, uint32(x))
}
